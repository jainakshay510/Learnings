Im[ortant opics and links for learning


Please find below study material been provided for Java candidates.

·         Bindings

·         Merge sort

·         Hashtree and hashmap implementation

·         Polymorphism

·         Garbage Collection

·         Executors

·         Runtime Parameters

·         Read through Concurrent Collections

·         SQL Syntax 

Also go through the following links and prepare for the next round of discussion.

 

> http://javahungry.blogspot.com/2013/08/hashing-how-hash-map-works-in-java-or.html

> http://javahungry.blogspot.com/2014/06/how-treemap-works-ten-treemap-java-interview-questions.html

> http://javahungry.blogspot.com/2015/02/how-concurrenthashmap-works-in-java-internal-implementation.html

> http://javahungry.blogspot.com/2015/10/how-treeset-works-internally-in-java-interview-questions.html

> http://javahungry.blogspot.com/p/threads.html

> http://javarevisited.blogspot.in/2011/04/synchronization-in-java-synchronized.html

> http://javarevisited.blogspot.in/2011/06/volatile-keyword-java-example-tutorial.html

> http://mrbool.com/working-with-java-executor-framework-in-multithreaded-application/27560

> http://stackoverflow.com/questions/10828863/what-the-use-of-custom-class-loader

> http://stackoverflow.com/questions/10901752/what-is-the-significance-of-load-factor-in-hashmap

> http://stackoverflow.com/questions/11011291/treeset-internally-uses-treemap-so-is-it-required-to-implement-hashcode-method

> http://stackoverflow.com/questions/137975/what-is-so-bad-about-singletons

> http://stackoverflow.com/questions/13855013/understanding-java-memory-management

> http://stackoverflow.com/questions/2087469/sort-a-file-with-huge-volume-of-data-given-memory-constraint

> http://stackoverflow.com/questions/27325997/how-does-countdownlatch-works-in-java

> http://stackoverflow.com/questions/56860/what-is-the-liskov-substitution-principle

> http://stackoverflow.com/questions/8161896/example-code-to-show-how-java-synchronized-block-works

> http://tutorials.jenkov.com/java-concurrency/synchronized.html

> http://tutorials.jenkov.com/java-util-concurrent/cyclicbarrier.html

> http://www.dynatrace.com/en/javabook/how-garbage-collection-works.html

> http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/G1GettingStarted/index.html

> http://www.programcreek.com/2013/03/hashmap-vs-treemap-vs-hashtable-vs-linkedhashmap/

> https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/garbage_collect.html

> https://en.m.wikipedia.org/wiki/Creational_pattern

> https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)

> https://lostechies.com/derickbailey/2009/02/11/solid-development-principles-in-motivational-pictures/

> https://scotch.io/bar-talk/s-o-l-i-d-the-first-five-principles-of-object-oriented-design

 

1)OOPS(Object Oriented Programming):

 

·         Polymorphism

·         Overloading vs Overriding

·         Abstract class vs Interface

 

2)Data Structures:

 

·         List, Linkedlist, Array list, Sorted List

·         Map, Treemap etc.

 

3)Operating Systems/JVM:

 

·         Process vs Threads

·         Stack vs Heap

·         Garbage collection

 

4)Threads and Synchronization

 

·         Runnable and thread class

·         Synchronized block, methods-static and non-static

·         Object vs Class level block

·         Thread pools/ExecutorService

·         Concurrent Collections

 

5)Database

 

·         Model entities with one-to-many and many-to-many relationship

·         PK and FK

·         Indexes

·         Transactions

·         Stored Procs